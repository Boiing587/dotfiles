#!/usr/bin/env bash
motion="${1}"
amount="${2:-70}"
floating="$(bspc query --tree --node focused | grep '"state":"floating"')"

move_node () {
  motion="${1}"
  printf "motion=${motion} (direction)\n"

  active_monitor="$(bspc query --monitors --node focused)"
  printf "active_monitor=${active_monitor}\n"

  to_node="$(bspc query --nodes --node ${motion})"
  printf "to_node=${to_node} (node positioned at direction (${motion}))\n"

  if test -z "${to_node}"; then
    printf "to_node is zero, getting monitor at direction (${motion})\n"
    to_monitor="$(bspc query --monitors --monitor ${motion})"
  else
    printf "to_node is set, getting monitor where node is positioned\n"
    to_monitor="$(bspc query --monitors --node ${to_node})"
  fi
  printf "to_monitor=${to_monitor}\n"
  printf "Checking if active_monitor and to_monitor matches\n"
  if test "${active_monitor}" != "${to_monitor}"; then
    bspc node --to-node "${motion}" --follow || bspc node --to-monitor "${motion}" --follow
  else
    bspc node --swap "${motion}" --follow
  fi
}

if test -z "${floating}"; then
  case "${motion}" in
    north) move_node north;;
    south) move_node south;;
    west) move_node west;;
    east) move_node east;;
  esac
else
  case "${motion}" in
    north) bspc node --move 0 -"${amount}";;
    south) bspc node --move 0 "${amount}";;
    west) bspc node --move -"${amount}" 0;;
    east) bspc node --move "${amount}" 0;;
  esac
fi
